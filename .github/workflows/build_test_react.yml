name: Build and Test React Application
on: 
  push: 
    branches: [ main ]
  pull_request: 
    branches: [ main ]
jobs: 
  build_test:
    permissions: 
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with: 
          node-version: ${{ matrix.node-version }}
      - name: npm ci, build and test
        run: |
          cd my-app
          npm ci
          npm run jsdoc
          npm run build --if-present
          npm test
        env:
          REACT_APP_SERVER_URL=${{secrets.REACT_APP_SERVER_URL}}
      - name: Build the stack
        run: docker compose up -d
      - name: Get package version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Get published version from npm
        id: npm_version
        run: |
          PUBLISHED_VERSION=$(npm show $(jq -r .name package.json) version || echo "0.0.0")
          echo "PUBLISHED_VERSION=$PUBLISHED_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: check_version
        run: |
          if [ "$VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "SHOULD_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "SHOULD_PUBLISH=false" >> $GITHUB_ENV
          fi

      - name: Publish to npm
        if: env.SHOULD_PUBLISH == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: my-app/build
          if-no-files-found: error
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: './my-app/coverage/clover.xml'
          token: ${{ secrets.CODECOV_TOKEN }}
      
# Deploy job
  deploy:
 # Deploy to the github-pages environment
   environment:
     name: github-pages
     url: ${{steps.deployment.outputs.page_url}}
   runs-on: ubuntu-latest
   permissions:
     pages: write
     id-token: write
   # Add a dependency to the build job
   needs: build_test
   # Specify runner + deployment step
   steps:
     - name: Deploy to GitHub Pages
       id: deployment
       uses: actions/deploy-pages@v4
     
